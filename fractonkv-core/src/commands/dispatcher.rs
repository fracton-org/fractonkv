use redis_protocol::resp3::types::BytesFrame;

use crate::{
    commands::{CommandKind, get::handle_get, set::handle_set},
    errors::CommandExecutionError,
    shard::types::DataStore,
};

pub fn dispatch_command(
    cmd: CommandKind,
    args: &[BytesFrame],
    db: &mut DataStore,
) -> Result<BytesFrame, CommandExecutionError> {
    match cmd {
        CommandKind::Zrange => todo!(),
        CommandKind::Hincrbyfloat => todo!(),
        CommandKind::Zunionstore => todo!(),
        CommandKind::Incr => todo!(),
        CommandKind::Smembers => todo!(),
        CommandKind::Zcount => todo!(),
        CommandKind::Zinterstore => todo!(),
        CommandKind::Zrevrank => todo!(),
        CommandKind::Linsert => todo!(),
        CommandKind::Sdiffstore => todo!(),
        CommandKind::Spop => todo!(),
        CommandKind::Hincrby => todo!(),
        CommandKind::Sdiff => todo!(),
        CommandKind::Sinterstore => todo!(),
        CommandKind::Ltrim => todo!(),
        CommandKind::Zremrangebyscore => todo!(),
        CommandKind::Lpushx => todo!(),
        CommandKind::Zincrby => todo!(),
        CommandKind::Hkeys => todo!(),
        CommandKind::Set => handle_set(args, db),
        CommandKind::Llen => todo!(),
        CommandKind::Hvals => todo!(),
        CommandKind::Smove => todo!(),
        CommandKind::Mget => todo!(),
        CommandKind::Zrangebyscore => todo!(),
        CommandKind::Hlen => todo!(),
        CommandKind::Zcard => todo!(),
        CommandKind::Rpush => todo!(),
        CommandKind::Hget => todo!(),
        CommandKind::Append => todo!(),
        CommandKind::Scard => todo!(),
        CommandKind::Sinter => todo!(),
        CommandKind::Hdel => todo!(),
        CommandKind::Sadd => todo!(),
        CommandKind::Get => handle_get(args, db),
        CommandKind::Hmset => todo!(),
        CommandKind::Decr => todo!(),
        CommandKind::Srandmember => todo!(),
        CommandKind::Rpoplpush => todo!(),
        CommandKind::Zrank => todo!(),
        CommandKind::Lpop => todo!(),
        CommandKind::Hmget => todo!(),
        CommandKind::Zscore => todo!(),
        CommandKind::Srem => todo!(),
        CommandKind::Zrevrange => todo!(),
        CommandKind::Rpop => todo!(),
        CommandKind::Mset => todo!(),
        CommandKind::Sismember => todo!(),
        CommandKind::Zadd => todo!(),
        CommandKind::Lindex => todo!(),
        CommandKind::Setnx => todo!(),
        CommandKind::Sunion => todo!(),
        CommandKind::Hgetall => todo!(),
        CommandKind::Getset => todo!(),
        CommandKind::Zrem => todo!(),
        CommandKind::Incrby => todo!(),
        CommandKind::Sunionstore => todo!(),
        CommandKind::Zrevrangebyscore => todo!(),
        CommandKind::Strlen => todo!(),
        CommandKind::Decrby => todo!(),
        CommandKind::Hexists => todo!(),
        CommandKind::Lrem => todo!(),
        CommandKind::Lrange => todo!(),
        CommandKind::Lpush => todo!(),
        CommandKind::Hsetnx => todo!(),
        CommandKind::Zremrangebyrank => todo!(),
        CommandKind::Rpushx => todo!(),
        CommandKind::Hset => todo!(),
    }
}
